실행방법:

cmd에 “python3 sen.py”를 써주세요.

실행환경:

OSX에서 python 3.4.3을 이용해 만들었습니다. OSX가 아닌 환경에서는 raw mode가 구현되지 않았습니다. normal Mode를 이용해주세요.

어떻게 돌아가는가:
인풋을 영어로 받습니다. (한글로 입력하셔도 되지만 조립된 한글을 입력하시는 건 의미가 없습니다)
만약 a를 인풋으로 받는다면, a는 프로그램에서 “ㅁ”으로 인식됩니다. asdf는 “ㅁㄴㅇㄹ”로 인식됩니다.
그 뒤, 현재까지 유저가 입력했던 정보를 확인합니다. 첫 인풋이 a였으니 앞까지 받은 글자가 없습니다. a를 Hangul이라는 object로 만듭니다.
hangle 자료형은 크게 세 가지 정보를 담습니다. 글자의 초성, 중성, 종성입니다.

종성우선(lastFirstHangulAssembler)는 다음과 같이 작동합니다.
인풋이 한글 자모가 아니라면 (138번째 줄) 특수한 처리를 합니다. 만약 delete가 입력되었다면 delete함수를 불러옵니다. 그 외의 경우에는 hangul object로 만들지 않고 그냥 String을 바로 추가해버립니다. 따옴표나 온점 같은 경우입니다.
만약 인풋이 한글 자모가 맞다면, 인풋이 자/모냐에 따라 다른 처리를 합니다.
인풋이 자음이라면, 먼저 앞 글자에 중성(모음)이 있는지 봅니다. 모음이 없다면(166), 이 글자는 새로운 한글이 됩니다. 예를 들어 “ㅋ” 다음에 “ㅋ”를 입력하면 “ㅋㅋ”가 됩ㄴㅣ다.
모음이 있다면(172), 앞 글자가 종성이 있는지 봅니다. 종성이 없다면, 이 글자는 종성이 됩니다.
종성이 있다면, 겹받침이 될 수 있는지 봅니다(182) 만약 “갑” 다음에 “ㅅ”이 입력되면 “값”으로 만들기 위함입니다.
겹받침도 될 수 없다면, 이 글자는 새로운 hangul object가 됩니다. (191) “값”다음에 “ㅇ”를 입력하면 “값ㅇ”가 됩니다.

인풋이 모음이라면, 먼저 앞 글자에 모음이 있는지 봅니다(205). 모음이 없다면, 앞 글자에 모음을 추가해줍니다. “ㄱ” 다음에 “ㅣ”가 오면 “기”가 됩ㄴㅣ다.
앞 글자에 모음이 있다면, 앞 글자에 종성이 있는지 봅니다.(210) 종성이 있을 때, 만약 종성이 겹받침이라면 (“ㄳ”과 같은) 이 겹받침을 쪼갭니다.
앞 글자에 모음이 있지만 받침이 없다면, 겹모음(“ㅘ”같은)이 될 수 있는지 봅니다. “오”다음에 “ㅏ”가 오면 “와”로 만듭니다. (265) 그렇지 않으면, 새로운 hangul object를 만듭니다. 


초성우선(firstFirstHangulAssembler)은 다음과 같이 작동합니다.
먼저, 특수한 경우를 처리합니다(369). 이는 대부분 종성우선과 비슷하나, 스페이스바가 있을 경우 부가적인 처리가 필요합니다(377). “하ㄹ”에서 스페이스를 치면 “할 “이 되어야하기 때문입니다. 스페이스바가 들어오면 일반적인 종성 처리를 합니다. 종성 처리는 아래에서 자세하게 설명됩니다.

자음의 경우, 앞 글자에 모음이 있다면 새로운 글자를 만듭니다.(423) 종성우선이라 받침은 여기서 넣지 않습니다.
그 다음, 앞 글자에 모음이 없고 자음만 있는 경우를 봅니다.(426) “하ㄹ”인 상태에 “ㅁ”이 추가된 경우입니다. 이때 받침 편입이 필요하다면, 그렇게 합니다. (428). 만약 겹받침이 만들어져야 한다면 (“갑ㅅ”에 띄어쓰기가 추가된 경우) 겹받침으로 만들어 줍니다. (442)

모음의 경우, 앞 글자에 초성이 있는지 봅니다(457). 초성이 있다면, 모음이 있는지 봅니다.(459) 모음이 없다면, 모음을 추가해줍니다. 모움이 없다면(463)겹모음이 만들어 질 수 있는지 봅니다. 겹모음이 만들어 질 수 있다면 만들고, 없으면 새로운 hangul object를 만듭니다.

이렇게 작동합니다. 감사합니다.

실행 스크린샷도 참고 부탁드립니다.